{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["module","exports","App","state","tasks","props","filteredTasks","draft","Update","e","console","log","target","value","setState","AddTodo","push","text","currentTarget","this","getFilteredTasksForText","filter","task","toLowerCase","includes","className","src","logo","alt","title","type","onChange","placeholder","onInput","filterTasks","bind","onClick","Component","TaskList","length","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mGAAAA,EAAOC,QAAU,IAA0B,kC,8NCKrCC,G,0NACJC,MAAQ,CACNC,MAAO,EAAKC,MAAMD,MAClBE,cAAe,EAAKD,MAAMD,MAC1BG,MAAO,I,EAGRC,OAAS,SAACC,GACTC,QAAQC,IAAIF,EAAEG,OAAOC,OACrB,EAAKC,SAAS,CAACP,MAAOE,EAAEG,OAAOC,S,EAGhCE,QAAU,WAITL,QAAQC,IAAI,EAAKR,MAAMC,OAIvB,EAAKC,MAAMD,MAAMY,KAAK,EAAKb,MAAMI,OACjC,EAAKO,SAAS,CAACR,cAAe,EAAKH,MAAMC,S,0DAI/BK,GACV,IAAMQ,EAAOR,EAAES,cAAcL,MAC7BH,QAAQC,IAAIM,GACZ,IAAMX,EAAgBa,KAAKC,wBAAwBH,GACnDE,KAAKL,SAAS,CACZR,kBAEFI,QAAQC,IAAIQ,KAAKhB,MAAMG,iB,8CAGDW,GACtB,OAAOE,KAAKhB,MAAMC,MAAMiB,QAAO,SAAAC,GAAI,OAAIA,EAAKC,cAAcC,SAASP,EAAKM,oB,+BAI1E,OACE,yBAAKE,UAAU,OACb,4BAAQA,UAAU,cAChB,yBAAKC,IAAKC,IAAMF,UAAU,WAAWG,IAAI,SACzC,2BACGT,KAAKd,MAAMwB,OAEf,2BAAOC,KAAK,OAAOC,SAAUZ,KAAKX,OAAQK,MAAOM,KAAKZ,MAAOyB,YAAY,cACzE,2BAAOF,KAAK,OAAOG,QAASd,KAAKe,YAAYC,KAAKhB,MAAOa,YAAY,iBACrE,4BAAQI,QAASjB,KAAKJ,SAAtB,OACA,kBAAC,EAAD,CAAUX,MAAOe,KAAKhB,MAAMG,sB,GAlDjB+B,cA2DZC,EAAW,SAAC,GAAe,IAAblC,EAAY,EAAZA,MAClB,OAAIA,EAAMmC,OAAS,EAEf,2BACGnC,EAAMoC,KAAI,SAAAlB,GAAI,OAAG,6BAAMA,OAM5B,2CAKWpB,ICnEAuC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCdQ,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,CAAKvB,MAAM,YAAYzB,MAJf,CAAC,eAAgB,sBAM3BiD,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f717f106.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import React, {Component} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { render } from '@testing-library/react';\n\nclass App extends Component {\n  state = {\n    tasks: this.props.tasks,\n    filteredTasks: this.props.tasks,\n    draft: ''\n  } \n\n   Update = (e) => { \n    console.log(e.target.value)\n    this.setState({draft: e.target.value})\n  }\n  \n   AddTodo = () => {\n    //tasks.push(this.state.draft)\n    //tasks.push('aaa')\n    //state.tasks.push(state.draft)\n    console.log(this.state.tasks)\n  \n    //const {tasks, draft} = this.state\n    //const list = tasks\n    this.props.tasks.push(this.state.draft)\n    this.setState({filteredTasks: this.state.tasks})\n    //console.log(this.state.draft)\n  }\n  \n  filterTasks(e) {\n    const text = e.currentTarget.value;\n    console.log(text)\n    const filteredTasks = this.getFilteredTasksForText(text)\n    this.setState({\n      filteredTasks\n    });\n    console.log(this.state.filteredTasks)\n  }\n\n  getFilteredTasksForText(text) {\n    return this.state.tasks.filter(task => task.toLowerCase().includes(text.toLowerCase()))\n  }\n\n  render() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          {this.props.title}\n        </p>\n       <input type=\"text\" onChange={this.Update} value={this.draft} placeholder='Task name'></input>\n       <input type=\"text\" onInput={this.filterTasks.bind(this)} placeholder='Search tasks'></input>\n       <button onClick={this.AddTodo}>Add</button>\n       <TaskList tasks={this.state.filteredTasks} />\n      </header>\n    </div>\n  );\n\n  }\n    \n}\n\nconst TaskList = ({ tasks }) => {\n  if (tasks.length > 0) {\n    return (\n      <p>\n        {tasks.map(task=> <div>{task}</div>)}\n      </p>\n    );\n  }\n\n  return (\n    <p>No results!</p>\n  );\n};\n  \n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nlet tasks = ['feed the cat', 'pump up the jam']\n\nReactDOM.render(\n  <React.StrictMode>\n    <App title='ToDo List' tasks={tasks} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}